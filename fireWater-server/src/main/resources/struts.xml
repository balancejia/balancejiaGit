<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
	<!--<constant name="struts.velocity.toolboxlocation" value="/WEB-INF/toolbox.xml"></constant> --><!-- 定义velocity工具箱xml路径 -->
	<!--开发模式设置开始// -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++开发状态 -->
	<constant name="webwork.devMode" value="false" />
	<constant name="struts.devMode" value="false" />
	<!-- 国际化资源重新加载 -->
	<constant name="struts.i18n.reload" value="true" />
	<!-- 配置文件重新加载 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- convention类从新加载 -->
	<constant name="struts.convention.classes.reload" value="true" />
	<!--++++++++++++++++++++++++++++++++++++++++++++++++开发模式结束 -->

	<constant name="struts.convention.action.disableScanning"
		value="false" />
	<constant name="struts.convention.action.mapAllMatches" value="false" />
	<constant name="struts.convention.default.parent.package"
		value="gloab-package" />
	<constant name="struts.convention.result.path" value="/pages" />
	<constant name="struts.convention.action.name.separator"
		value="_" />


	<!--确定搜索包的路径。只要是结尾为action的包都要搜索。basePackage按照默认不用配置，如果配置，只会找以此配置开头的包。locators及locators.basePackage都是一组以逗号分割的字符串。 -->
	<constant name="struts.convention.package.locators" value="action" />


	<!-- 基于什么包 -->
	<constant name="struts.convention.package.locators.basePackage"
		value="com.thx" />

	<!-- struts2.3.16.1 默认动态方法调用是关闭状态，使用需打开！！！ -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!--设置Convention插件是否从jar包中搜索Action类 [可选] 默认值为true -->
	<constant name="struts.convention.action.disableJarScanning"
		value="true" />
	<!--设置Convention插件文件协议类型 -->
	<constant name="struts.convention.action.fileProtocols" value="jar,wsjar" />
	<!--设置Convention插件需要搜索的jar包 -->
	<constant name="struts.convention.action.includeJars" value=".*?/thx-(.*)-web(.*)\.jar(!/)?,.*?/thx-addressList(.*)\.jar(!/)?" />

	<package name="gloab-package" extends="convention-default,json-default,embeddedjsp-default"
		namespace="">
		<interceptors>
			<!-- timer:输出action的执行时间（包括内嵌的拦截器和视图）; exception:把异常映射到对应的结果; alias:将同一个参数在请求之间进行命名转换; 
				servletConfig:提供了对表示HttpServletRequest 和HttpServletResponse的Map的访问; i18n:记忆用户session所使用的locale; 
				scopedModelDriven:如果action实现了ScopedModelDriven，该拦截器会从scope中获取并存储模型，然后通过setModel方法将其赋给action; 
				modelDriven:如果action实现了ModelDriven，该拦截器会将getModel方法的结果放到值栈上面; fileUpload:为便捷的文件上传提供支持; 
				checkbox:添加checkbox的自动处理代码，可以检测没有被选中的checkbox，并给它一个默认值（通常是false），然后作为参数添加。它使用了一个特定名称的隐藏字段来检查未提交的checkbox。未选中的默认值可以被那些不是boolean值的checkbox重写; 
				params:把请求参数赋给action; -->
			<interceptor name="logInterceptor"
				class="com.thx.common.struts2.interceptor.LogInterceptor" />
			<interceptor name="pageInterceptor"
				class="com.thx.common.struts2.interceptor.PageInterceptor" />
			<interceptor-stack name="topDtStack">
				<interceptor-ref name="timer" />
				<interceptor-ref name="exception">
					<param name="logEnabled">true</param>
					<param name="logLevel">error</param>
				</interceptor-ref>
				<interceptor-ref name="token">
					<param name="includeMethods">save</param>
				</interceptor-ref>
				<interceptor-ref name="pageInterceptor">
					<param name="includeMethods">list</param>
				</interceptor-ref>
				<interceptor-ref name="alias" />
				<interceptor-ref name="i18n" />
				<interceptor-ref name="servletConfig" />
				<interceptor-ref name="prepare" />
				<interceptor-ref name="scopedModelDriven" />
				<interceptor-ref name="modelDriven" />
				<interceptor-ref name="fileUpload" />
				<interceptor-ref name="checkbox" />
				<interceptor-ref name="params">
					<param name="excludeParams">dojo\..*</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<default-interceptor-ref name="topDtStack"></default-interceptor-ref>
		<global-results>
			<result name="error">/pages/common/error.html</result>
			<result name="invalid.token">/pages/common/invalidToken.jsp</result>
		</global-results>

		<global-exception-mappings>
			<exception-mapping exception="SystemException"
				result="error" />
			<exception-mapping exception="BusinessException"
				result="error" />
			<exception-mapping exception="Exception" result="error" />
		</global-exception-mappings>
	</package>

</struts>
