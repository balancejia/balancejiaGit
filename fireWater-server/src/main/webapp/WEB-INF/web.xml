<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>fireWater</display-name>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext*.xml</param-value>
  </context-param>
  <context-param>
    <param-name>baseUrl</param-name>
    <param-value>/fireWater</param-value>
  </context-param>
  <context-param>
    <param-name>staticFileUrl</param-name>
    <param-value>/fireWater</param-value>
  </context-param>
  <filter>
    <filter-name>OpenSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>OpenSessionInViewFilter</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>OpenSessionInViewFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>sessionFilter</filter-name>
    <filter-class>com.thx.web.filter.WebSessionFilter</filter-class>
    <init-param>
      <param-name>excludePaths</param-name>
      <param-value>login.jsp,login!input.action,login!logon.action,captcha.action,checkUserName.action,doNewHtml5New.action,doNewHtml5List.action</param-value>
    </init-param>
    <init-param>
      <param-name>failGo</param-name>
      <param-value>failGo.html</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>sessionFilter</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>sessionFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>JSONRPCServlet</servlet-name>
    <servlet-class>mixedserver.protocol.jsonrpc.RPC</servlet-class>
    <init-param>
      <param-name>expose_methods</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>print_message</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>persist_class</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>detailed_errors</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>gzip_threshold</param-name>
      <param-value>1</param-value>
    </init-param>
    <init-param>
      <param-name>encrypt_message</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>dencrypt_message</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>JSONRPCServlet</servlet-name>
    <url-pattern>/JSON-RPC</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>
			org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <listener>
    <listener-class>
			com.thx.user.listener.UserSessionListener
		</listener-class>
  </listener>
  <welcome-file-list>
    <welcome-file>default.html</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>StreamUploadServlet</servlet-name>
    <servlet-class>com.thx.upload.stream.StreamUploadServlet</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>StreamUploadServlet</servlet-name>
    <url-pattern>/stream/upload</url-pattern>
  </servlet-mapping>
</web-app>